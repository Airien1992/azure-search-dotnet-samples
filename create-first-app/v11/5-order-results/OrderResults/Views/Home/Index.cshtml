@model OrderResults.Models.SearchData
@{
    ViewData["Title"] = "Home Page";
}
<head>
    <meta charset="utf-8">
    <title>Typeahead</title>
    <link href="https://code.jquery.com/ui/1.12.1/themes/start/jquery-ui.css"
          rel="stylesheet">
    <script src="https://code.jquery.com/jquery-1.10.2.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    <link rel="stylesheet" href="~/css/hotels.css?v1.7" />
</head>
<body>

    @using (Html.BeginForm("Index", "Home", FormMethod.Post))
    {
        <table>
            <tr>
                <td></td>
                <td>
                    <h1 class="sampleTitle">
                        <img src="~/images/azure-logo.png" width="80" />
                        Hotels Search - Order Results
                    </h1>
                </td>
            </tr>
            <tr>
                <td></td>
                <td>
                    <!-- Display the search text box, with the search icon to the right of it. -->
                    <div id="underneath" class="searchBox" style="position: relative; left: 0; top: 0">
                    </div>

                    <div id="searchinput" class="searchBoxForm" style="position: relative; left: 0; top: -39px">
                        @Html.TextBoxFor(m => m.searchText, new { @class = "searchBox", @id = "azureautocomplete" }) <input value="" class="searchBoxSubmit" type="submit">
                    </div>

                    <div class="searchBoxForm">
                        <b>&nbsp;Order:&nbsp;</b>
                        @Html.RadioButtonFor(m => m.scoring, "Default") Default&nbsp;&nbsp;
                        @Html.RadioButtonFor(m => m.scoring, "RatingRenovation") By numerical Rating&nbsp;&nbsp;
                        @Html.RadioButtonFor(m => m.scoring, "boostAmenities") By Amenities&nbsp;&nbsp;
                        @Html.RadioButtonFor(m => m.scoring, "renovatedAndHighlyRated") By Renovated date/Rating profile&nbsp;&nbsp;
                    </div>
                </td>
            </tr>

            <tr>
                <td valign="top">
                    <div id="facetplace" class="facetchecks">

                        @if (Model != null && Model.facetText != null)
                        {
                            <h5 class="facetheader">Amenities:</h5>
                            <ul class="facetlist">
                                @for (var c = 0; c < Model.facetText.Length; c++)
                                {
                                    <li> @Html.CheckBoxFor(m => m.facetOn[c], new { @id = "check" + c.ToString() }) @Model.facetText[c] </li>
                                }

                            </ul>
                        }
                    </div>
                </td>
                <td>
                    @if (Model != null && Model.resultList != null)
                    {
                        // Show the total result count.
                        <p class="sampleText">
                            @Model.resultList.TotalCount Results <br />
                        </p>

                        var result = Model.resultList.GetResults().ToList();

                        <div id="myDiv" style="width: 800px; height: 450px; overflow-y: scroll;" onscroll="scrolled()">

                            <!-- Show the hotel data. -->
                            @for (var i = 0; i < result.Count; i++)
                            {
                                var rateText = $"Rates from ${result[i].Document.cheapest} to ${result[i].Document.expensive}";
                                var lastRenovatedText = $"Last renovated: { result[i].Document.LastRenovationDate.Value.Year}";
                                var ratingText = $"Rating: {result[i].Document.Rating}";

                                string amenities = string.Join(", ", result[i].Document.Tags);
                                string fullDescription = result[i].Document.Description;
                                fullDescription += $"\nAmenities: {amenities}";

                                // Display the hotel details.
                                @Html.TextArea($"name{i}", result[i].Document.HotelName, new { @class = "box1A" })
                                @Html.TextArea($"rating{i}", ratingText, new { @class = "box1B" })
                                @Html.TextArea($"rates{i}", rateText, new { @class = "box2A" })
                                @Html.TextArea($"renovation{i}", lastRenovatedText, new { @class = "box2B" })
                                @Html.TextArea($"desc{i}", fullDescription, new { @class = "box3" })
                            }

                        </div>

                        <script>
                            $('#azureautocomplete').autocomplete({
                                delay: 500,
                                minLength: 2,
                                position: {
                                    my: "left top",
                                    at: "left-23 bottom+10"
                                },

                                // Use Ajax to set up a "success" function.
                                source: function (request, response) {
                                    var controllerUrl = "/Home/AutoCompleteAndSuggestAsync?term=" + $("#azureautocomplete").val();
                                    $.ajax({
                                        url: controllerUrl,
                                        dataType: "json",
                                        success: function (data) {
                                            if (data && data.length > 0) {

                                                // Show the autocomplete suggestion.
                                                document.getElementById("underneath").innerHTML = data[0];

                                                // Remove the top suggestion as it is used for inline autocomplete.
                                                var array = new Array();
                                                for (var n = 1; n < data.length; n++) {
                                                    array[n - 1] = data[n];
                                                }

                                                // Show the drop-down list of suggestions.
                                                response(array);
                                            } else {

                                                // Nothing is returned, so clear the autocomplete suggestion.
                                                document.getElementById("underneath").innerHTML = "";
                                            }
                                        }
                                    });
                                }
                            });

                            // Complete on TAB.
                            // Clear on ESC.
                            // Clear if backspace to less than 2 characters.
                            // Clear if any arrow key hit as user is navigating the suggestions.
                            $("#azureautocomplete").keydown(function (evt) {

                                var suggestedText = document.getElementById("underneath").innerHTML;
                                if (evt.keyCode === 9 /* TAB */ && suggestedText.length > 0) {
                                    $("#azureautocomplete").val(suggestedText);
                                    return false;
                                } else if (evt.keyCode === 27 /* ESC */) {
                                    document.getElementById("underneath").innerHTML = "";
                                    $("#azureautocomplete").val("");
                                } else if (evt.keyCode === 8 /* Backspace */) {
                                    if ($("#azureautocomplete").val().length < 2) {
                                        document.getElementById("underneath").innerHTML = "";
                                    }
                                } else if (evt.keyCode >= 37 && evt.keyCode <= 40 /* Any arrow key */) {
                                    document.getElementById("underneath").innerHTML = "";
                                }
                            });

                            // Character replace function.
                            function setCharAt(str, index, chr) {
                                if (index > str.length - 1) return str;
                                return str.substr(0, index) + chr + str.substr(index + 1);
                            }

                            // This function is needed to clear the "underneath" text when the user clicks on a suggestion, and to
                            // correct the case of the autocomplete option when it does not match the case of the user input.
                            // The interval function is activated with the input, blur, change, or focus events.
                            $("#azureautocomplete").on("input blur change focus", function (e) {

                                // Set a 2 second interval duration.
                                var intervalDuration = 2000,
                                    interval = setInterval(function () {

                                        // Compare the autocorrect suggestion with the actual typed string.
                                        var inputText = document.getElementById("azureautocomplete").value;
                                        var autoText = document.getElementById("underneath").innerHTML;

                                        // If the typed string is longer than the suggestion, then clear the suggestion.
                                        if (inputText.length > autoText.length) {
                                            document.getElementById("underneath").innerHTML = "";
                                        } else {

                                            // If the strings match, change the case of the suggestion to match the case of the typed input.
                                            if (autoText.toLowerCase().startsWith(inputText.toLowerCase())) {
                                                for (var n = 0; n < inputText.length; n++) {
                                                    autoText = setCharAt(autoText, n, inputText[n]);
                                                }
                                                document.getElementById("underneath").innerHTML = autoText;

                                            } else {
                                                // The strings do not match, so clear the suggestion.
                                                document.getElementById("underneath").innerHTML = "";
                                            }
                                        }

                                        // If the element loses focus, stop the interval checking.
                                        if (!$input.is(':focus')) clearInterval(interval);

                                    }, intervalDuration);
                            });
                            function scrolled() {
                                if (myDiv.offsetHeight + myDiv.scrollTop >= myDiv.scrollHeight) {
                                    $.getJSON("/Home/NextAsync", function (data) {
                                        var div = document.getElementById('myDiv');

                                        // Append the returned data to the current list of hotels.
                                        for (var i = 0; i < data.length; i += 5) {
                                            div.innerHTML += '\n<textarea class="box1A">' + data[i] + '</textarea>';
                                            div.innerHTML += '<textarea class="box1B">' + data[i + 1] + '</textarea>';
                                            div.innerHTML += '\n<textarea class="box2A">' + data[i + 2] + '</textarea>';
                                            div.innerHTML += '<textarea class="box2B">' + data[i + 3] + '</textarea>';
                                            div.innerHTML += '\n<textarea class="box3">' + data[i + 4] + '</textarea>';
                                        }
                                    });
                                }
                            }
                            
                        </script>
                    }
                </td>
            </tr>
        </table>
    }
</body>